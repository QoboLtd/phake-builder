<?php
require_once 'vendor/autoload.php';
require_once __DIR__ . DIRECTORY_SEPARATOR . 'lib' . DIRECTORY_SEPARATOR . 'System.php';
require_once __DIR__ . DIRECTORY_SEPARATOR . 'lib' . DIRECTORY_SEPARATOR . 'Git.php';

// Git related tasks
group('git', function() {
	
	desc('Git checkout');
	task('checkout', ':builder:init', function($app) {
		printSeparator();
		printInfo("Git checkout");

		$git = new \Phakebuilder\Git(requireValue('SYSTEM_COMMAND_GIT', $app));
		$currentBranch = doShellCommand($git->getCurrentBranch());
		printDebug("Current branch: [$currentBranch]");
		
		$requiredBranch = requireValue('GIT_BRANCH', $app);
		
		if ($currentBranch == $requiredBranch) {
			printDebug("Skipping git checkout - already on branch [$requiredBranch]");
		}
		else {
			doShellCommand($git->checkout($requiredBranch));
		}
	});
	
	desc('Git changelog');
	task('changelog', ':builder:init', function($app) {
		printSeparator();
		printInfo("Git changelog");
		
		$oldHash = requireValue('GIT_OLD_HASH', $app);
		$newHash = requireValue('GIT_NEW_HASH', $app);
		printInfo("Old hash: $oldHash");
		printInfo("New hash: $newHash");
	
		$git = new \Phakebuilder\Git(requireValue('SYSTEM_COMMAND_GIT', $app));
		
		$changelog = doShellCommand($git->changelog($oldHash, $newHash), null, true);
		$changelog = $changelog ?: 'Not available';
		
		printInfo("Changelog\n$changelog");
	});

	desc('Git pull');
	task('pull', ':builder:init', function($app) {
		printSeparator();
		printInfo("Git pull");
		
		$git = new \Phakebuilder\Git(requireValue('SYSTEM_COMMAND_GIT', $app));
		$oldHash = doShellCommand($git->getCurrentHash(), null, true);
		doShellCommand($git->pull());

		$newHash = doShellCommand($git->getCurrentHash(), null, true);
		$changelog = doShellCommand($git->changelog($oldHash, $newHash), null, true);
		$changelog = $changelog ?: 'Not available';
		printInfo("Changelog\n$changelog");
	});
	
	desc('Git push');
	task('push', ':builder:init', function($app) {
		printSeparator();
		printInfo("Git push");
		
		$remote = requireValue('GIT_REMOTE', $app);
		$branch = requireValue('GIT_BRANCH', $app);
		
		$git = new \Phakebuilder\Git(requireValue('SYSTEM_COMMAND_GIT', $app));
		doShellCommand($git->push($remote, $branch));
	});

});
# vi:ft=php
?>
